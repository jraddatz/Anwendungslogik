swagger: "2.0"
info:
  version: "0.0.1"
  title: Ludo
host: localhost:3000
basePath: /
#
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /lobby:
    options:
      responses:
       default:
        description: CORS headers for all operations
        headers:
          Acces-Control-Allow-Credentials:
            type: boolean
            default: true
          Acces-Control-Allow-Headers:
            type: string
            default: Accept, X-Access-Token, X-Application-Name, X-Request-Sent-Time
          Access-Control-Allow-Methods:
            type: string
            default: GET, POST, OPTIONS, PUT, DELETE
          Access-Control-Allow-Origin:
            type: string
            default: "*"
    x-swagger-router-controller: lobby
    get:
      description: Returns a list of all lobby
      operationId: getLobbys
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Lobbys"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /lobby/create:
    options:
      responses:
       default:
        description: CORS headers for all operations
        headers:
          Acces-Control-Allow-Credentials:
            type: boolean
            default: true
          Acces-Control-Allow-Headers:
            type: string
            default: Accept, X-Access-Token, X-Application-Name, X-Request-Sent-Time
          Access-Control-Allow-Methods:
            type: string
            default: GET, POST, OPTIONS, PUT, DELETE
          Access-Control-Allow-Origin:
            type: string
            default: "*"
    x-swagger-router-controller: lobby
    put:
      description: Creates a new Lobby and returns the ID of the created Lobby
      operationId: createLobby
      produces:
        - application/json
      parameters:
        - name: newLobby
          in: body
          required: true
          schema:
            $ref: "#/definitions/NewLobby"
      responses:
        "200":
          description: Created
          schema:
            $ref: "#/definitions/LobbyId"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /lobby/join:
    options:
      responses:
       default:
        description: CORS headers for all operations
        headers:
          Acces-Control-Allow-Credentials:
            type: boolean
            default: true
          Acces-Control-Allow-Headers:
            type: string
            default: Accept, X-Access-Token, X-Application-Name, X-Request-Sent-Time
          Access-Control-Allow-Methods:
            type: string
            default: GET, POST, OPTIONS, PUT, DELETE
          Access-Control-Allow-Origin:
            type: string
            default: "*"
    x-swagger-router-controller: lobby
    put:
      description: Adds a Player to a lobby
      operationId: addPlayerToLobby
      produces:
        - application/json
      parameters:
        - name: addPlayer
          in: body
          required: true
          schema:
            $ref: "#/definitions/PlayerToLobby"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      
  /lobby/leave:
    options:
      responses:
       default:
        description: CORS headers for all operations
        headers:
          Acces-Control-Allow-Credentials:
            type: boolean
            default: true
          Acces-Control-Allow-Headers:
            type: string
            default: Accept, X-Access-Token, X-Application-Name, X-Request-Sent-Time
          Access-Control-Allow-Methods:
            type: string
            default: GET, POST, OPTIONS, PUT, DELETE
          Access-Control-Allow-Origin:
            type: string
            default: "*"
    x-swagger-router-controller: lobby
    post:
      description: Removes a Player from a Lobby
      operationId: removePlayer
      produces:
        - application/json
      parameters:
        - name: addPlayer
          in: body
          required: true
          schema:
            $ref: "#/definitions/PlayerToLobby"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /lobby/players:
    x-swagger-router-controller: lobby
    get:
      description: returns the player in a lobby
      operationId: playersInLobby
      parameters:
        - in: query
          name: lobbyid
          type: integer
          required: true
          description: Numeric ID of the Lobby.
      responses:
        "200":
          description: Success
          headers:
            Acces-Control-Allow-Credentials:
              type: boolean
              default: true
            Acces-Control-Allow-Headers:
              type: string
              default: Accept, X-Access-Token, X-Application-Name, X-Request-Sent-Time
            Access-Control-Allow-Methods:
              type: string
              default: GET, POST, OPTIONS, PUT, DELETE
            Access-Control-Allow-Origin:
              type: string
              default: "*"
          schema:
            $ref: "#/definitions/Players"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /lobby/kick:
    x-swagger-router-controller: lobby
    delete:
      description: Kicks a player out of a lobby
      operationId: kickPlayer
      parameters:
        - in: query
          name: lobbyid
          type: integer
          required: true
          description: Numeric ID of the Lobby.
      responses:
        "200":
          description: OK
          headers:
            Acces-Control-Allow-Credentials:
              type: boolean
              default: true
            Acces-Control-Allow-Headers:
              type: string
              default: Accept, X-Access-Token, X-Application-Name, X-Request-Sent-Time
            Access-Control-Allow-Methods:
              type: string
              default: GET, POST, OPTIONS, PUT, DELETE
            Access-Control-Allow-Origin:
              type: string
              default: "*"
          schema:
            $ref: "#/definitions/PlayerId"
    
  
  /swagger:
    x-swagger-pipe: swagger_raw

definitions:
  PlayerId:
    properties:
      id:
        type: number
        description: Unique identifier of a player
  Player:
    properties:
      id:
        type: number
        description: Unique identifier of a Player
      name:
        type: string
        description: Name of the Player
      amazonecho:
        type: boolean
        description: defines if the player has a echo
      ping:
        type: number
        description: ping of the player
  Players:
    type: array
    items:
      $ref: '#/definitions/Player'
  PlayerToLobby:
    properties:
      username:
        type: string
        description:  Name of the User
      lobby:
        type: number
        description: Unique identifier representing a Lobby
  LobbyId:
    properties:
      id:
        type: number
        description:  Unique identifier representing a Lobby
  NewLobby:
    properties:
      id:
        type: number
        description: Unique identifier representing a Lobby
      name:
        type: string
        description: name of the new Lobby
      username:
        type: string
        description: name of the User who created the Lobby
      password:
        type: string
        description: password of the Lobby
      playerCount:
        type: number
        description: number of Players
        
  Lobby:
    properties:
      id:
        type: number
        description: Unique identifier representing a Lobby
      name:
        type: string
        description: name of a Lobby
      currentPlayers:
        type: number
        description: number of current Players
      maxPlayers:
        type: number
        description: Number of Max Players
      password:
        type: boolean
        description: Tells if a password is needed or not
  Lobbys:
    type: array
    items:
      $ref: '#/definitions/Lobby'

  Response:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string